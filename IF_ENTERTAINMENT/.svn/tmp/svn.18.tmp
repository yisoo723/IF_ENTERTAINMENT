package kr.or.ddit.controller.community;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.service.community.IFeedService;
import kr.or.ddit.vo.common.UserVO;
import kr.or.ddit.vo.community.CommunityVO;
import kr.or.ddit.vo.community.MainArtistGroupVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 커뮤니티 메인페이지
 * @author 임민혁
 */
@Controller
@Slf4j
@RequestMapping("/community")
public class CommunityMainController {
	/*
	 * 메인화면 
	 * 커뮤니티 메인페이지는 로그인을 하지 않아도 조회는 가능함 
	 * 아티스트를 선택했을 때 로그인을 강제함
	 */
	
	/* 
	 * 커뮤니티 가입하는 메소드 
	 * 닉네임 중복값 검사(커뮤니티마다 각각 다른 닉네임 사용가능, 회원닉네임 테이블에 Insert)
	 * 커뮤니티가입 테이블에 Insert
	 * */
	
	@Inject
	private IFeedService feedService;
	
	
	@RequestMapping(value="/main.do" , method=RequestMethod.GET)
	public String artistList(Model model) {
		
		
		List<MainArtistGroupVO>artistList =feedService.selectArtist();
		
		model.addAttribute("artistList",artistList);
		
		return "community/feedMain";
	}
	
//	@RequestMapping(value="/artist",method = RequestMethod.GET)
//	public String showArtistDetails() {
//		
//	}
	

	@RequestMapping(value = "/artist", method = RequestMethod.GET)
	public String communitySignUp(@RequestParam("agId") String agId, Model model
//			Principal principal
//			시큐리티
			) {
	    log.info("agId: " + agId);
	    List<MainArtistGroupVO> artist = feedService.getArtistById(agId);
	    log.info("artist123: " + artist);
	    model.addAttribute("artistGroup", artist);
	    
	        log.info("agId111: " + agId);
	        
	        //하드코딩
	       
	        //아티스트 그룹아이디가 넘어가니까 그 아티스트 그룹아이디랑 userNo를 넘겨야해
	        CommunityVO communityVO = new CommunityVO();
	        communityVO.setUserNo(30);
	        communityVO.setAgId(agId);
	        
	        CommunityVO comId = feedService.selectUser(communityVO);
	        
	        if(comId !=null) {
	        	return "community/artistFeed";
	        }else {
	        	return "commons/communitySignUp"; 
	        }
	    
//	    comId.setUserNo(30);
	    
//	    if (principal != null) {
//	        // 로그인 상태일 때 처리할 내용
//	    } else {
//	        // 비로그인 상태일 때 처리할 내용
//	        return "community/artistFeed";
//	    }
	}
	
}
