package kr.or.ddit.controller.entertain;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.service.entertain.IAuditionService;
import kr.or.ddit.util.ServiceResult;
import kr.or.ddit.vo.entertain.AuditionRegisterVO;
import kr.or.ddit.vo.entertain.NationVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 오디션 신청 컨트롤러
 * @author 이수진
 */
@Controller
@Slf4j
@RequestMapping("/entertain/audition")
public class AuditionApplyInsertController {

	@Inject
	private IAuditionService auditionService;
	
	@RequestMapping(value = "/auditionSupportGuide.do", method = RequestMethod.GET)
	public String auditionSupportGuide() {
		return "entertain/auditionSupportGuide";
	}
	
	@RequestMapping(value = "/auditionSupportFrom.do", method = RequestMethod.GET)
	public String auditionSupportForm(NationVO nationVO, Model model) {
		List<NationVO> nationList = auditionService.nationList();
		model.addAttribute("nationList", nationList);
//		log.info("nationList {}", nationList);
		return "entertain/auditionSupportForm";
	}
	
	@RequestMapping(value = "/auditionSupportFrom.do", method = RequestMethod.POST)
	public String auditionSupportRegister(
			HttpServletRequest req,
			@Valid NationVO nationVO, 
			@Valid AuditionRegisterVO auditionRegisterVO, 
			Model model,
			RedirectAttributes ra,
			BindingResult br
			) {
		
		String goPage = "";
		
		Map<String, String> errors = new HashMap<String, String>();
		
		if(StringUtils.isBlank(auditionRegisterVO.getArTitle())) {
			errors.put("arTitle", "제목(20자이내)을 입력해주세요.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("arCategory", "지원분야를 선택해주세요.");
		}
		if(StringUtils.isBlank(nationVO.getNationName())) {
			errors.put("nationName", "국적을 선택해주세요.");
		}
		if(auditionRegisterVO.getArPw() == null) {
			errors.put("arPw", "대문자 1개 이상, 소문자 1개 이상, 숫자 1개 이상, 특수문자 1개 이상을 포함한 8자 이상을 입력해주세요.");
		}
		if(auditionRegisterVO.getArPw1() != auditionRegisterVO.getArPw()) {
			errors.put("arPw1", "비밀번호가 일치하지 않습니다.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("arName", "이름을 입력해주세요.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("arGender", "성별를 선택해주세요.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("arBirth", "생년원일을 선택해주세요.");
		}
		if(auditionRegisterVO.getArHeight() == null) {
			errors.put("arHeight", "신장을 입력해주세요.");
		}
		if(auditionRegisterVO.getArWeight() == null) {
			errors.put("arWeight", "제중를 입력해주세요.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("arTelno", "지원분야를 선택해주세요.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("arEmail", "올바른 이메일 형식이 아닙니다.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("auditionPhotoFile", "지원분야를 선택해주세요.");
		}
		if(StringUtils.isBlank(auditionRegisterVO.getArCategory())) {
			errors.put("auditionVideoFile", "지원분야를 선택해주세요.");
		}
		
		if(errors.size() > 0) {
			model.addAttribute("errors", errors);
			model.addAttribute("AuditionRegisterVO", auditionRegisterVO);
			model.addAttribute("NationVO", nationVO);
			goPage = "entertain/auditionSupportForm";
		}else {
			ServiceResult result = auditionService.auditionSupportRegister(req, auditionRegisterVO, nationVO);
			
			if(result.equals(ServiceResult.OK)) {
				ra.addFlashAttribute("message", "오디션 지원이 완료되었습니다.");
				goPage = "redirect:/entertain/audition/auditionSupportGuide.do";
			}else {
				model.addAttribute("message", "오디션 지원에 실패하였습니다. 다시 시도해주세요!");
				goPage = "entertain/auditionSupportForm";
			}
		}
		return goPage;
	}
	
}
