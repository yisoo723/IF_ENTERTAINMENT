package kr.or.ddit.controller.community;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.service.common.IMypageService;
import kr.or.ddit.vo.common.CustomUser;
import kr.or.ddit.vo.common.UserVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 마이페이지 컨트롤러
 * 
 * @author 서어진
 *
 */
@Controller
@Slf4j
@RequestMapping("/community/mypage")
public class MypageController {
	// 1. 마이페이지 조회

	// 2. 마이페이지 수정
	// 비밀번호 수정 시 passwordEncoder 방식으로 암호화하여 업데이트

	@Inject
	private IMypageService mypageService;

	@Inject
	private PasswordEncoder pe;

	@PreAuthorize("hasRole('ROLE_MEMBER')")
	@RequestMapping(value = "/list.do", method = RequestMethod.GET)
	public String myPageList(Model model) {

		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal(); // 로그인
		UserVO userVO = user.getUser();
		log.info("### userVO : {}" , userVO);
		model.addAttribute("userVO", userVO);
		return "commons/myPageForm";
	}
	
	@PreAuthorize("hasRole('ROLE_MEMBER')")
	@RequestMapping(value = "/update.do", method = RequestMethod.POST)
	public String myPageUpdate(UserVO myUserVO, HttpSession session, Model model) {
		String goPage = "";
		
		CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal(); // 로그인
		UserVO userVO = user.getUser();
		
		model.addAttribute("userVO", userVO);
		myUserVO.setUserPw(pe.encode(myUserVO.getUserPw())); 
		return "commons/myPageForm";
	}
}
