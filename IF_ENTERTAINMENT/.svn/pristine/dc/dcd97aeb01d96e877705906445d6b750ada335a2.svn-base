package kr.or.ddit.controller.community;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.service.community.IFeedService;
import kr.or.ddit.util.ServiceResult;
import kr.or.ddit.vo.community.FeedAttachFileVO;
import kr.or.ddit.vo.community.FeedVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 피드 등록 컨트롤러
 * @author 임민혁
 */
@Controller
@Slf4j
@RequestMapping("/community/feed")
public class FeedInsertController {
	
	@Inject
	private IFeedService feedService;
	
	// 아티스트는 피드를 등록할 때 멤버십 전용만 보이게 할지 여부를 체크할 수 있다.
	
	// 아티스트가 피드를 등록할 경우 해당 커뮤니티에 가입된 사용자 들에게 실시간 알림을 전송한다.(성이수) 

	@RequestMapping(value="/upload.do",method = RequestMethod.GET)
	public String feedFile(FeedAttachFileVO file) {
		
		return "admin/community/insert";
	}
	
	
	
	
	@RequestMapping(value="/upload.do",method = RequestMethod.POST)
	public String feedFileInsert(FeedVO FeedVO, Model model,
			RedirectAttributes ra, HttpServletRequest req
			) {
		String goPage ="";
		
		log.info("넘어온 FeedVO : " + FeedVO);
		
		List<FeedAttachFileVO> feedList = new ArrayList<FeedAttachFileVO>();
		
		feedList.add(new FeedAttachFileVO(FeedVO.getFeedFile()));
		
		FeedVO.setFeedFileList(feedList);
		
		Map<String, String> errors = new HashMap<String, String>();
		
		
		if(errors.size() > 0) { 
			model.addAttribute("errors", errors);
			model.addAttribute("FeedVO", FeedVO);
			goPage = "admin/community/insert";
			
		} else { 
			
			
//			CustomUser user = (CustomUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
//			UserVO userVO = user.getUser();
			if(true) {
//			if(userVO != null) { 
//				FeedVO.setUserNo(userVO.getUserNo());
				//임시 하드코딩
				FeedVO.setUserNo(131);
				FeedVO.setFeedMembership("0");
				FeedVO.setFeedType("1");
				FeedVO.setAgId("5");
				FeedVO.setFeedDelyn("N");
				
				
				ServiceResult result = feedService.insertFeed(req, FeedVO);
				if(result.equals(ServiceResult.OK)) {
					ra.addFlashAttribute("message", "게시글 등록이 성공했습니다!");
					goPage = "redirect:/community/feed/admin/list.do";
				} else {
					model.addAttribute("message", "서버에러, 다시 시도해주세요!");
					model.addAttribute("FeedVO", FeedVO);
					goPage = "admin/communuty/insert";
				}
			} else {
				ra.addFlashAttribute("message", "로그인 후에 사용 가능합니다!");
				goPage="redirect:/signin.do";
			}
		}
		
		return goPage;
	}
}
