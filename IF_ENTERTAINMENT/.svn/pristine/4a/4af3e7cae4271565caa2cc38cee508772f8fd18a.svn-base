package kr.or.ddit.service.impl.entertain;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Service;

import kr.or.ddit.mapper.entertain.IArtistMapper;
import kr.or.ddit.service.entertain.IArtistService;
import kr.or.ddit.util.ServiceResult;
import kr.or.ddit.vo.common.PaginationInfoVO;
import kr.or.ddit.vo.common.UserVO;
import kr.or.ddit.vo.entertain.AlbumVO;
import kr.or.ddit.vo.entertain.ArtistGroupVO;
import kr.or.ddit.vo.entertain.ArtistVO;
import kr.or.ddit.vo.entertain.TrackListVO;

@Service
public class ArtistServiceImpl implements IArtistService {

	@Inject
	private IArtistMapper artistMapper;

	@Override
	public List<AlbumVO> albumList(String agId) {
		return artistMapper.albumList(agId);
	}

	@Override
	public List<TrackListVO> selectAlbum(int alNo) {
		return artistMapper.selectAlbum(alNo);
	}
	@Override
	public AlbumVO albumDetail(int alNo) {
		return artistMapper.albumDetail(alNo);
	}

	@Override
	public ArtistGroupVO profileList(String agId) {
		return artistMapper.profileList(agId);
	}

	@Override
	public List<ArtistVO> artistSelect(String agId) {
		return artistMapper.artistSelect(agId);
	}

	@Override
	public List<ArtistGroupVO> artistList() {
		return artistMapper.artistList();
	}

	

	@Override
	public List<ArtistVO> adminArtistList() {
		return artistMapper.adminArtistList();
	}

	@Override
	public int selectArtistListCount(PaginationInfoVO<ArtistGroupVO> pagingVO) {
		return artistMapper.selectArtistListCount(pagingVO);
	}

	@Override
	public List<ArtistGroupVO> adminList(PaginationInfoVO<ArtistGroupVO> pagingVO) {
		return artistMapper.adminList(pagingVO);
	}

	@Override
	public ServiceResult deleteArtist(HttpServletRequest req, String agId) {
		ServiceResult result = null;
		int status = artistMapper.deleteArtist(agId);
		System.out.println("232232323" + status);
		if(status > 0 ) {
			result= ServiceResult.OK;
		}else {
			result= ServiceResult.FAILED;
		}
		return result;
	}

	

	@Override
	public List<UserVO> aritstListForm() {
		return artistMapper.aritstListForm();
	}

	@Override
	public void groupInsert(ArtistGroupVO artistGroupVO1) {
		artistMapper.groupInsert(artistGroupVO1);
	}

	@Override
	public void insert(List<ArtistVO> artistList) {
		artistMapper.insert(artistList);
		
	}

	@Override
	public ArtistGroupVO artistGroupSelect(String agId) {
		return artistMapper.artistGroupSelect(agId);
	}

	@Override
	public List<ArtistVO> artistMemberSelect(String agId) {
		return artistMapper.artistMemberSelect(agId);
	}

	

}
