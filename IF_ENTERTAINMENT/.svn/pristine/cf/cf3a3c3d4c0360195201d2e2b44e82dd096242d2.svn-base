package kr.or.ddit.controller.community;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.service.community.IFeedService;
import kr.or.ddit.util.ServiceResult;
import kr.or.ddit.vo.community.FeedVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 피드 수정 및 삭제 컨트롤러
 * @author 임민혁
 */
@Controller
@Slf4j
@RequestMapping("/community/feed")
public class FeedModifyController {
    // 아티스트는 수정을 할 때 멤버십에게만 공개할지에 대한 여부를 수정할 수 있도록
    // 수정시 본인이 기존에 올렸던 영상이나 사진은 미리보기로 있을 수 있도록
    
    // 본인이 작성한 게시글만 삭제가 가능하되 
    // 삭제 할 수 있는 권한은 작성한 유저 + 관리자는 모든 글 유저 삭제 가능하도록
    @Inject
    private IFeedService feedService;
    
    @RequestMapping(value="/update.do", method = RequestMethod.POST)
    public String noticeUpdate(
            HttpServletRequest req,
            RedirectAttributes ra,
            FeedVO feedVO, Model model) {
        String goPage = "";
        ServiceResult result = feedService.updateFeed(req, feedVO);
        if(result.equals(ServiceResult.OK)) {   
            ra.addFlashAttribute("message","게시글 수정이 완료되었습니다!");
            goPage = "redirect:/community/feed/admin/feedListDetail.do?feedNo="+feedVO.getFeedNo();
        }else { 
            model.addAttribute("feed",feedVO);
            model.addAttribute("message","서버에러, 다시 시도해주세요!");
            goPage = "community/feed/admin/update"; // 수정에 실패하면 다시 피드 수정 페이지로 이동
        }
        return goPage;
    }
}
