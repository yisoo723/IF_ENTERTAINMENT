package kr.or.ddit.controller.entertain;

import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.entertain.ICompanyNewsService;
import kr.or.ddit.vo.common.PaginationInfoVO;
import kr.or.ddit.vo.entertain.CompanyNewsVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 기업소식 조회 컨트롤러(사용자/관리자) 
 * @author 서어진
 */
@Controller
@Slf4j
@RequestMapping("entertain/company/news")
public class CompanyNewsRetrieveController {
	
	@Inject
	private ICompanyNewsService companyNewsService;
	
	@RequestMapping(value="/list.do")
	public String CompanyNewsList(
			@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "title") String searchType,
			@RequestParam(required = false) String searchWord,
			Model model
			) {
		PaginationInfoVO<CompanyNewsVO> pagingVO = new PaginationInfoVO<CompanyNewsVO>();
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			
			model.addAttribute("searchType", searchType);
			model.addAttribute("searchWord", searchWord);
		}
		
		pagingVO.setCurrentPage(currentPage);
		int totalRecord = companyNewsService.selectCompanyNewsCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord); 
		
		List<CompanyNewsVO>  dataList = companyNewsService.selectCompanyNewsList(pagingVO);
		pagingVO.setDataList(dataList); 
		
		model.addAttribute("pagingVO", pagingVO);
		
		return "admin/entertain/CompanyNewsList";
	}
	
	@RequestMapping(value="/detail.do", method = RequestMethod.GET)
	public String CompanyNewsDetail(int bfNo, Model model) {
		CompanyNewsVO companyNewsVO = companyNewsService.selectCompanyNews(bfNo);
		model.addAttribute("companyNews", companyNewsVO);
		return "admin/entertain/CompanyNewsDetail";
	}
	
	// 사용자 리스트
		@RequestMapping(value="/userlist.do")
		public String UserCheckCompanyNewsList(
				@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
				@RequestParam(required = false, defaultValue = "title") String searchType,
				@RequestParam(required = false) String searchWord,
				Model model
				) {
			PaginationInfoVO<CompanyNewsVO> pagingVO = new PaginationInfoVO<CompanyNewsVO>();
			
			if(StringUtils.isNotBlank(searchWord)) {
				pagingVO.setSearchType(searchType);
				pagingVO.setSearchWord(searchWord);
				
				model.addAttribute("searchType", searchType);
				model.addAttribute("searchWord", searchWord);
			}
			
			pagingVO.setCurrentPage(currentPage);
			int totalRecord = companyNewsService.selectUserCompanyNewsCount(pagingVO);
			pagingVO.setTotalRecord(totalRecord); 
			
			List<CompanyNewsVO>  dataList = companyNewsService.selectUserCompanyNewsList(pagingVO);
			pagingVO.setDataList(dataList); 
			
			model.addAttribute("pagingVO", pagingVO);
			
			return "entertain/UserCheckCompanyNewsList";
		}
		
		@RequestMapping(value="/userdetail.do", method = RequestMethod.GET)
		public String UserCheckCompanyNewsDetail(int bfNo, Model model) {
			CompanyNewsVO companyNewsVO = companyNewsService.selectUserCompanyNews(bfNo);
			model.addAttribute("companyNews", companyNewsVO);
			return "entertain/UserCheckCompanyNewsDetail";
		}
	
}
