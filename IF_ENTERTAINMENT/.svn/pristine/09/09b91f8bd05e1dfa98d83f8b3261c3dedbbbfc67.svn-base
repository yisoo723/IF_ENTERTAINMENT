package kr.or.ddit.controller.entertain;

import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.entertain.IAuditionService;
import kr.or.ddit.vo.common.PaginationInfoVO;
import kr.or.ddit.vo.entertain.AuditionBoardVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 오디션 일정 조회 컨트롤러
 * @author 이수진
 */
@Controller
@Slf4j
@RequestMapping("/entertain/audition")
public class AuditionNoticeRetrieveController {

	@Inject
	private IAuditionService auditionService;
	
	@RequestMapping(value = "/scheduleList.do")
	public String auditionSchedule(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "title") String searchType,
			@RequestParam(required = false) String searchWord,
			Model model) {
		
		PaginationInfoVO<AuditionBoardVO> paginationInfoVO = new PaginationInfoVO<AuditionBoardVO>();
		
		if(StringUtils.isNotBlank(searchWord)) {
			paginationInfoVO.setSearchType(searchType);
			paginationInfoVO.setSearchWord(searchWord);
			
			model.addAttribute("searchType", searchType);
			model.addAttribute("searchWord", searchWord);
		}
		
		paginationInfoVO.setCurrentPage(currentPage);
		int totalRecord = auditionService.selectNoticeCount(paginationInfoVO);
		paginationInfoVO.setTotalRecord(totalRecord);
		
		List<AuditionBoardVO> auditionList = auditionService.auditionScheduleList(paginationInfoVO);
		paginationInfoVO.setDataList(auditionList);
		
		model.addAttribute("paginationInfoVO", paginationInfoVO);
		
		return "entertain/auditionScheduleList";
	}
	
	
}
